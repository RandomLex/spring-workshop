<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:c="http://www.springframework.org/schema/c"
       xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/util
        http://www.springframework.org/schema/util/spring-util-2.0.xsd">

    <util:map id="john-marks">
        <entry key="Java" value="8"/>
        <entry key="Python" value="9"/>
        <entry key="C" value="10"/>
    </util:map>

    <bean id="john" class="by.academy.spring.model.Student" p:id="1" p:name="John" p:marks-ref="john-marks"/>

    <bean id="bob" class="by.academy.spring.model.Student">
        <property name="id" value="2"/>
        <property name="name" value="Bob"/>
        <property name="marks">
            <map>
                <entry key="Java" value="7"/>
                <entry key="Python" value="8"/>
                <entry key="C" value="9"/>
            </map>
        </property>
    </bean>

    <bean id="alex" class="by.academy.spring.model.Teacher">
        <property name="id" value="1"/>
        <property name="name" value="Alex"/>
        <property name="salary" value="100"/>
    </bean>


    <util:list id="ee-students">
        <ref bean="john"/>
        <ref bean="bob"/>
    </util:list>


    <bean id="ee" class="by.academy.spring.model.Group" init-method="create" destroy-method="finish">
        <constructor-arg name="id" value="1"/>
        <constructor-arg name="name" value="EE"/>
        <constructor-arg name="teacher" ref="alex"/>
        <constructor-arg name="students" ref="ee-students"/>
    </bean>

    <bean id="testGroup" class="by.academy.spring.model.Group" init-method="create" destroy-method="finish">
        <property name="id" value="#{ee.getId() + 1}"/>
        <property name="name" value="#{'test-' + new java.util.Random().nextInt(100)}"/>
        <property name="teacher">
            <bean class="by.academy.spring.model.Teacher" c:id="#{T(Math).round(T(Math).PI)}" c:name="testName" p:salary="100"/>
        </property>
        <property name="students">
            <util:list>
                <bean class="by.academy.spring.model.Student" c:id="55" c:name="Student"/>
            </util:list>
        </property>
    </bean>


</beans>